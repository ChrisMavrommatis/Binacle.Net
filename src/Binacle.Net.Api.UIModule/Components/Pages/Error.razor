@using System.Diagnostics
@using Microsoft.AspNetCore.Http

@page "/Error"
@page "/Error/{ErrorCode}"

@if (!string.IsNullOrWhiteSpace(this.ErrorCode))
{
	<PageTitle>Error @this.ErrorCode</PageTitle>
}
else
{
	<PageTitle>Error</PageTitle>
}

<h1 class="text-danger">Error @this.ErrorCode</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (this.IsDevelopment)
{
	<p>
		<strong>Request ID:</strong> <code>@RequestId</code>
	</p>

	<h3>Development Mode</h3>
	<p>
		Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
	</p>
	<p>
		<strong>The Development environment shouldn't be enabled for deployed applications.</strong>
		It can result in displaying sensitive information from exceptions to end users.
		For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
		and restarting the app.
	</p>

}


@code {
	[Parameter]
	public string? ErrorCode { get; set; }

	[CascadingParameter]
	private HttpContext? HttpContext { get; set; }

	private string? RequestId { get; set; }
	private bool IsDevelopment { get; set; }

	protected override void OnInitialized()
	{
		this.RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
		this.IsDevelopment = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development";
	}
}
