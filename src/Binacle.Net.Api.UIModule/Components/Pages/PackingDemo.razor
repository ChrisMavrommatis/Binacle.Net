@using Binacle.Net.Api.UIModule.Components.Features
@using Binacle.Net.Api.UIModule.Services

@rendermode RenderMode.InteractiveServer

@inject ISampleDataService SampleDataService

@page "/PackingDemo"

<PageTitle>Packing Demo</PageTitle>

<h1>Packing Demo</h1>

<p>
	This build in UI provides easy use for experimentation and visualization for the packing algorithm.
</p>
<p>
	This demo uses the experimental V3 API.
</p>

<EditForm Model="@Model" class="grid">
	<DataAnnotationsValidator />
	
	<article class="s12">
		<fieldset>
			@foreach (var bin in Model.Bins)
			{
				<div class="grid">
					<div class="s4 field border label">
						<InputNumber id="length" @bind-Value="bin.Length" />
						<label for="length">Length</label>
					</div>
					<div class="s4 field border label">
						<InputNumber id="width" @bind-Value="bin.Width" />
						<label for="width">Width</label>
					</div>

					<div class="s4 field border label">
						<InputNumber id="height" @bind-Value="bin.Height" />
						<label for="height">Height</label>
					</div>
					<div class="s12">
						<ValidationMessage For="@(() => bin.Length)" class="supporting-text red-text" />
						<ValidationMessage For="@(() => bin.Width)" class="supporting-text red-text" />
						<ValidationMessage For="@(() => bin.Height)" class="supporting-text red-text" />
					</div>
				</div>
			}
		</fieldset>

	</article>
</EditForm>

<div class="grid">
    <div class="s12">
		    <PackingVisualizer>
			    
		    </PackingVisualizer>
		    <BinPackingResults/>
    </div>
</div>

@code {

	internal ViewModels.BinPackingViewModel Model { get; set; }

	protected override void OnInitialized()
	{
		var sampleData = this.SampleDataService!.GetInitialSampleData();
		this.Model = sampleData;
	}

}