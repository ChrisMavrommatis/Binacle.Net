@using Binacle.Net.Api.UIModule.Components.Features
@using Binacle.Net.Api.UIModule.Components.Shared.Forms

@rendermode RenderMode.InteractiveServer

@page "/PackingDemo"

<PageTitle>Packing Demo</PageTitle>

<h1>Packing Demo</h1>

<p>
	This build in UI provides easy use for experimentation and visualization for the packing algorithm.
</p>
<p>
	This demo uses the experimental V3 API.
</p>

<EditForm Model="@Model" class="grid">
	<DataAnnotationsValidator/>

	<article class="s12 primary-container">
		<fieldset>
			<legend>Bins</legend>
			@foreach (var bin in Model.Bins)
			{
				<div class="row">
					<div class="max">
						<InputNumberField @bind-Value="bin.Length" Label="Length" id="length"/>
					</div>
					<div class="max">
						<InputNumberField @bind-Value="bin.Width" Label="Width" id="width"/>
					</div>
					<div class="max">
						<InputNumberField @bind-Value="bin.Height" Label="Height" id="height"/>
					</div>
					<button type="button" class="transparent circle" @onclick="(() => this.RemoveBin(bin))">
						<MaterialSymbol Name="delete"/>
					</button>
				</div>
				<div>
					<ValidationMessage For="@(() => bin.Length)" class="error-text"/>
					<ValidationMessage For="@(() => bin.Width)" class="error-text"/>
					<ValidationMessage For="@(() => bin.Height)" class="error-text"/>
				</div>
			}
		</fieldset>
		<nav>
			<button class="max" type="button" @onclick="this.AddBin">
				<MaterialSymbol Name="add"/>
				<span class="m l">Add Bin</span>
			</button>
			<button class="max" type="button" @onclick="this.ClearAllBins">
				<MaterialSymbol Name="delete_forever"/>
				<span class="m l">Clear All Bins</span>
			</button>
			<button class="max" type="button" @onclick="this.RandomizeBinsFromSamples">
				<MaterialSymbol Name="refresh"/>
				<span class="m l">Randomize from samples</span>
			</button>
		</nav>
	</article>

	<article class="s12 secondary-container">
		<fieldset>
			<legend>Items</legend>
			@foreach (var item in Model.Items)
			{
				<div class="row">
					<div class="max">
						<InputNumberField @bind-Value="item.Length" Label="Length" id="length"/>
					</div>
					<div class="max">
						<InputNumberField @bind-Value="item.Width" Label="Width" id="width"/>
					</div>
					<div class="max">
						<InputNumberField @bind-Value="item.Height" Label="Height" id="height"/>
					</div>
					<div class="max">
						<InputNumberField @bind-Value="item.Quantity" Label="Quantity" id="quantity"/>
					</div>
					<button type="button" class="transparent circle" @onclick="(() => this.RemoveItem(item))">
						<MaterialSymbol Name="delete"/>
					</button>
				</div>
				<div>
					<ValidationMessage For="@(() => item.Length)" class="error-text"/>
					<ValidationMessage For="@(() => item.Width)" class="error-text" />
					<ValidationMessage For="@(() => item.Height)" class="error-text"/>
					<ValidationMessage For="@(() => item.Quantity)" class="error-text"/>
				</div>
			}
		</fieldset>
		<nav>
			<button class="max" type="button" @onclick="this.AddItem">
				<MaterialSymbol Name="add"/>
				<span class="m l">Add Item</span>
			</button>
			<button class="max" type="button" @onclick="this.ClearAllItems">
				<MaterialSymbol Name="delete_forever"/>
				<span class="m l">Clear All Items</span>
			</button>
			<button class="max" type="button" @onclick="this.RandomizeItemsFromSamples">
				<MaterialSymbol Name="refresh"/>
				<span class="m l">Randomize from samples</span>
			</button>
		</nav>
	</article>
	
	<fieldset class="s12">
		<div class="row">
			<div class="max">
				<SelectField
					Id="algorithm"
					Label="Algorithm"
					@bind-Value="@this.Model.Algorithm"
					Options="ExtensionMethods.EnumExtensions.ToKeyValue<ViewModels.Algorithm>()"/>
			</div>
			<button class="max" type="button" @onclick="this.GetResults">
				<span>Get Results</span>
			</button>
		</div>
	</fieldset>
</EditForm>

<div class="grid">
	<div class="s12">
		<PackingVisualizer InitialBin="@this.selectedResult.Bin"/>
	</div>
</div>
